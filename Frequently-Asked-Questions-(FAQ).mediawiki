= Running a WESTPA Simulation =

== What if I encounter an issue while running the simulation? ==

Use the --debug option on the servers w_run and save the output to a file. (note that this will generate a very detailed log of the process, try searching for "ERROR" for any errors and "iteration" to look at every iteration)
Use a program like hdfview, h5ls or Python with h5py library to open the west.h5 file and ensure that the progress coordinate is being passed around correctly.
Use hdfview, h5ls or Python with h5py library to ensure that the number of trajectory walkers is correct.

== What if my simulation is failing while the progress coordinate is being calculated? ==

One of the most error prone part during an iteration is the progress coordinate extraction. Programs that are not designed for quick execution have a lot of trouble during this step (VMD is a very commonly encountered one for example). Probably the best way to deal with this issue is to hard code a script to do the progress coordinate extraction. If you are doing molecular dynamics simulations multiple libraries for Python and C/C++ that deal with most output formats for MD packages exist and they usually come with a lot of convenience functions that can help you extract the progress coordinate. AMBER tools and GROMACS tools seems to work adequately for this purpose as well.

== How do I change the progress coordinate 'on the fly'? ==

It is possible that during a simulation, you may want to change the progress coordinate without losing data already collected. There are two methods. The first may remove previously accumulated data.  This option is to use w_fork to effectively start a new simulation. You'd change your runseg.sh to return the appropriate progress coordinate then resume the simulation.  This is the only option if you have not saved trajectories along the way. Another option is to change your analysis in runseg.sh to a different coordinate; this will not affect WESTPA in any way. You must be careful in analysis to separate data from the two respective data sets. In the case of switching from distance to RMSD at iteration 200, you will use the output from w_crawl for iterations 1 to 200, and beyond that use what we have in the h5. 
== How can I cleanly shutdown a simulation (without corrupting the h5 file)? ==

It is generally safe to shutdown a WESTPA simulation by simply canceling the job through your queue management. However, to ensure data integrity in the h5 file, you should wait until the WESTPA log indicates that an iteration has begun or is occurring; canceling a job too quickly after submission can result in the absolute corruption of the h5 file and should be avoided.

== How can I restart a WESTPA simulation? ==

In general restarting a westpa simulation will restart an incomplete iteration, retaining data from segments that have completed and re-running segments that were incomplete (or never started).

In case that the iteration data got corrupted or you want to go back to an specific iteration and change something, you need to delete all the trajectory secgments and other files related to that iteration and run w_truncate on that iteration. This will delete westpa's information about the nth iteration, which includes which segments have run and which have not. Then restarting your westpa simulation will restart that iteration afresh.

== How do you recommend storing the simulation data? ==

A WESTPA simulation can generate tens of millions of trajectory files. To more conveniently store these files, we recommend tarring these files up into larger files in the 'offline' mode (e.g., one tarball per iteration). Consult with your sysadmin on how to handle large files to ensure file integrity and system performance. For example, files <300 GB are recommended on the Ranch long-term archival storage system at the Texas Advanced Computing Center (TACC). 

= Analyzing a WESTPA simulation? =

== What if I get the error message "H5py Inflate() Failed error"? ==

While running or analyzing a simulation, you may run into an error such as IOError: Can't write data (Inflate() failed). These errors may be related to an open bug in H5py. However, the following tips may help you to find a workaround.

WESTPA may present you with such an error when unable to read or write a data set. In the case that a simulation gives this error when you attempt to run it, it may be helpful to check if a data set may be read or written to using an interactive Python session. Restarting the simulation may require deleting and remaking the data set. Also, this error may be related to compression and other storage options. Thus, it may be helpful to disable compression and chunked storage. Note that existing datasets will retain compression and other options given to them at the time of their creation, so it may be necessary to truncate an iteration (for example, using w_truncate) in order for changes to take effect.

This error may also occur during repeated opening (e.g., 1000s of times) of an HDF5 data set. Thus, this error may occur while running analysis scripts. In this case, it may be helpful to cache data sets in physical memory (RAM) as numpy arrays when they are read, so that the script loads the dataset a minimal number of times.

== How can I handle periodic boundary conditions? ==

WESTPA was designed to work cleanly with any dynamics package available (using the executable propagator); however, many of the tips and tricks available on the web or the user manual for these packages make the (reasonable) assumption that you will be running a set of brute force trajectories. As such, some of their guidelines for handling periodic boundary conditions may not be applicable.

For example, many of the GROMACS tools now handle periodic boundary conditions cleanly (such as g_dist) with relatively little user interaction, others, such as g_rms, do not. If your simulation analysis protocol requires you to run such a tool, you must correct for the periodic boundary conditions before running it. While there are guidelines available to help you correct for whatever conditions your system may have [http://www.gromacs.org/Documentation/Terminology/Periodic_Boundary_Conditions here], there is an implicit assumption that you have one long running trajectory.

It will be necessary, within your executable propagator (usually runseg.sh) to run trjconv (typically, two or three times, depending on your needs: once to remove the periodic boundary conditions, then to make molecules whole, then to remove any jumps). If no extra input is supplied (the -s flag in GROMACS 4.X), GROMACS uses the first frame of your segment trajectory as a reference state to remove jumps. If your segment's parent ended the previous iteration having jumped across the box barrier, trjconv will erroneously assume this is the correct state and 'correct' any jump back across the barrier. '''This can result in unusually high RMSD values for one segment for one or more iterations,''' and can show as discontinuities on the probability distribution. It is important to note that a lack of discontinuities does not imply a lack of imaging problems.

To fix this, simply pass in the last frame of the imaged parent trajectory and use that as the reference structure for trjconv. This will ensure that trjconv is aware if your segment has crossed the barrier at time 0 and will make the appropriate corrections.

= Developing scripts/plug-ins for WESTPA =

== I'm trying to profile a parallel script using the --profile option of bin/west. I get a PicklingError. What gives? ==

When executing a script using --profile, the following error may crop up:

<pre>
PicklingError: Can't pickle <type 'function'>: attribute lookup __builtin__.function failed
</pre>
The cProfile module used by the --profile option modifies function definitions such that they are no longer pickleable, meaning that they cannot be passed through the work manager to other processes. If you absolutely must profile a parallel script, use the threads work manager.

